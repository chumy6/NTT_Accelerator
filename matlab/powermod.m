% 快速模幂 (计算a^b mod m)
% 通过将指数 b 按二进制分解，并利用指数的二进制位来减少计算次数。
% 每次循环中，通过平方底数和根据指数的奇偶性选择是否将底数与当前结果相乘，从而快速计算出结果
function y = powermod(a, b, m)
    y = 1;
    a = mod(a, m);  % 先对底数 a 进行模 m 运算，确保 a 在 [0, m-1] 范围内
    while b > 0  % 当指数 b 大于 0 时继续循环
        if mod(b, 2) == 1  % 如果指数 b 是奇数
            y = mod(y * a, m);  % 将当前的底数 a 乘到结果 y 上，并对模 m 运算
        end
        a = mod(a * a, m);  % 将底数 a 平方，并对模 m 运算
        b = floor(b / 2);  % 将指数 b 除以 2，取整数部分
    end
end
